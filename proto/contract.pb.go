// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: nimbler_key_generator/proto/contract.proto

package nimbler_key_generator

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_nimbler_key_generator_proto_contract_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_nimbler_key_generator_proto_contract_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetKeyRequest) Reset() {
	*x = GetKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyRequest) ProtoMessage() {}

func (x *GetKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyRequest.ProtoReflect.Descriptor instead.
func (*GetKeyRequest) Descriptor() ([]byte, []int) {
	return file_nimbler_key_generator_proto_contract_proto_rawDescGZIP(), []int{2}
}

type GetKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKeyResponse) Reset() {
	*x = GetKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyResponse) ProtoMessage() {}

func (x *GetKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyResponse.ProtoReflect.Descriptor instead.
func (*GetKeyResponse) Descriptor() ([]byte, []int) {
	return file_nimbler_key_generator_proto_contract_proto_rawDescGZIP(), []int{3}
}

func (x *GetKeyResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GenerateKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GenerateKeysRequest) Reset() {
	*x = GenerateKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeysRequest) ProtoMessage() {}

func (x *GenerateKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeysRequest.ProtoReflect.Descriptor instead.
func (*GenerateKeysRequest) Descriptor() ([]byte, []int) {
	return file_nimbler_key_generator_proto_contract_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateKeysRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GenerateKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateKeysResponse) Reset() {
	*x = GenerateKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeysResponse) ProtoMessage() {}

func (x *GenerateKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeysResponse.ProtoReflect.Descriptor instead.
func (*GenerateKeysResponse) Descriptor() ([]byte, []int) {
	return file_nimbler_key_generator_proto_contract_proto_rawDescGZIP(), []int{5}
}

type ReuseKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *ReuseKeysRequest) Reset() {
	*x = ReuseKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReuseKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReuseKeysRequest) ProtoMessage() {}

func (x *ReuseKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReuseKeysRequest.ProtoReflect.Descriptor instead.
func (*ReuseKeysRequest) Descriptor() ([]byte, []int) {
	return file_nimbler_key_generator_proto_contract_proto_rawDescGZIP(), []int{6}
}

func (x *ReuseKeysRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type ReuseKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReuseKeysResponse) Reset() {
	*x = ReuseKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReuseKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReuseKeysResponse) ProtoMessage() {}

func (x *ReuseKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nimbler_key_generator_proto_contract_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReuseKeysResponse.ProtoReflect.Descriptor instead.
func (*ReuseKeysResponse) Descriptor() ([]byte, []int) {
	return file_nimbler_key_generator_proto_contract_proto_rawDescGZIP(), []int{7}
}

var File_nimbler_key_generator_proto_contract_proto protoreflect.FileDescriptor

var file_nimbler_key_generator_proto_contract_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6e, 0x69, 0x6d, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6e, 0x69,
	0x6d, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x2b, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x16, 0x0a, 0x14,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x52, 0x65, 0x75, 0x73, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x13, 0x0a, 0x11,
	0x52, 0x65, 0x75, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x9c, 0x03, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x66, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x29, 0x2e, 0x6e, 0x69, 0x6d, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6e,
	0x69, 0x6d, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x2e, 0x6e, 0x69, 0x6d, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6e, 0x69, 0x6d,
	0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x2a, 0x2e, 0x6e, 0x69, 0x6d, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x6e, 0x69, 0x6d, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x09, 0x52, 0x65, 0x75, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x27, 0x2e, 0x6e, 0x69,
	0x6d, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x75, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6e, 0x69, 0x6d, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x75,
	0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nimbler_key_generator_proto_contract_proto_rawDescOnce sync.Once
	file_nimbler_key_generator_proto_contract_proto_rawDescData = file_nimbler_key_generator_proto_contract_proto_rawDesc
)

func file_nimbler_key_generator_proto_contract_proto_rawDescGZIP() []byte {
	file_nimbler_key_generator_proto_contract_proto_rawDescOnce.Do(func() {
		file_nimbler_key_generator_proto_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_nimbler_key_generator_proto_contract_proto_rawDescData)
	})
	return file_nimbler_key_generator_proto_contract_proto_rawDescData
}

var file_nimbler_key_generator_proto_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_nimbler_key_generator_proto_contract_proto_goTypes = []interface{}{
	(*HealthCheckRequest)(nil),   // 0: nimbler_key_generator.HealthCheckRequest
	(*HealthCheckResponse)(nil),  // 1: nimbler_key_generator.HealthCheckResponse
	(*GetKeyRequest)(nil),        // 2: nimbler_key_generator.GetKeyRequest
	(*GetKeyResponse)(nil),       // 3: nimbler_key_generator.GetKeyResponse
	(*GenerateKeysRequest)(nil),  // 4: nimbler_key_generator.GenerateKeysRequest
	(*GenerateKeysResponse)(nil), // 5: nimbler_key_generator.GenerateKeysResponse
	(*ReuseKeysRequest)(nil),     // 6: nimbler_key_generator.ReuseKeysRequest
	(*ReuseKeysResponse)(nil),    // 7: nimbler_key_generator.ReuseKeysResponse
}
var file_nimbler_key_generator_proto_contract_proto_depIdxs = []int32{
	0, // 0: nimbler_key_generator.KeyGenerator.HealthCheck:input_type -> nimbler_key_generator.HealthCheckRequest
	2, // 1: nimbler_key_generator.KeyGenerator.GetKey:input_type -> nimbler_key_generator.GetKeyRequest
	4, // 2: nimbler_key_generator.KeyGenerator.GenerateKeys:input_type -> nimbler_key_generator.GenerateKeysRequest
	6, // 3: nimbler_key_generator.KeyGenerator.ReuseKeys:input_type -> nimbler_key_generator.ReuseKeysRequest
	1, // 4: nimbler_key_generator.KeyGenerator.HealthCheck:output_type -> nimbler_key_generator.HealthCheckResponse
	3, // 5: nimbler_key_generator.KeyGenerator.GetKey:output_type -> nimbler_key_generator.GetKeyResponse
	5, // 6: nimbler_key_generator.KeyGenerator.GenerateKeys:output_type -> nimbler_key_generator.GenerateKeysResponse
	7, // 7: nimbler_key_generator.KeyGenerator.ReuseKeys:output_type -> nimbler_key_generator.ReuseKeysResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_nimbler_key_generator_proto_contract_proto_init() }
func file_nimbler_key_generator_proto_contract_proto_init() {
	if File_nimbler_key_generator_proto_contract_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nimbler_key_generator_proto_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimbler_key_generator_proto_contract_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimbler_key_generator_proto_contract_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimbler_key_generator_proto_contract_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimbler_key_generator_proto_contract_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimbler_key_generator_proto_contract_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimbler_key_generator_proto_contract_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReuseKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimbler_key_generator_proto_contract_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReuseKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nimbler_key_generator_proto_contract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nimbler_key_generator_proto_contract_proto_goTypes,
		DependencyIndexes: file_nimbler_key_generator_proto_contract_proto_depIdxs,
		MessageInfos:      file_nimbler_key_generator_proto_contract_proto_msgTypes,
	}.Build()
	File_nimbler_key_generator_proto_contract_proto = out.File
	file_nimbler_key_generator_proto_contract_proto_rawDesc = nil
	file_nimbler_key_generator_proto_contract_proto_goTypes = nil
	file_nimbler_key_generator_proto_contract_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KeyGeneratorClient is the client API for KeyGenerator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeyGeneratorClient interface {
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	GetKey(ctx context.Context, in *GetKeyRequest, opts ...grpc.CallOption) (*GetKeyResponse, error)
	GenerateKeys(ctx context.Context, in *GenerateKeysRequest, opts ...grpc.CallOption) (*GenerateKeysResponse, error)
	ReuseKeys(ctx context.Context, in *ReuseKeysRequest, opts ...grpc.CallOption) (*ReuseKeysResponse, error)
}

type keyGeneratorClient struct {
	cc grpc.ClientConnInterface
}

func NewKeyGeneratorClient(cc grpc.ClientConnInterface) KeyGeneratorClient {
	return &keyGeneratorClient{cc}
}

func (c *keyGeneratorClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/nimbler_key_generator.KeyGenerator/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyGeneratorClient) GetKey(ctx context.Context, in *GetKeyRequest, opts ...grpc.CallOption) (*GetKeyResponse, error) {
	out := new(GetKeyResponse)
	err := c.cc.Invoke(ctx, "/nimbler_key_generator.KeyGenerator/GetKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyGeneratorClient) GenerateKeys(ctx context.Context, in *GenerateKeysRequest, opts ...grpc.CallOption) (*GenerateKeysResponse, error) {
	out := new(GenerateKeysResponse)
	err := c.cc.Invoke(ctx, "/nimbler_key_generator.KeyGenerator/GenerateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyGeneratorClient) ReuseKeys(ctx context.Context, in *ReuseKeysRequest, opts ...grpc.CallOption) (*ReuseKeysResponse, error) {
	out := new(ReuseKeysResponse)
	err := c.cc.Invoke(ctx, "/nimbler_key_generator.KeyGenerator/ReuseKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeyGeneratorServer is the server API for KeyGenerator service.
type KeyGeneratorServer interface {
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	GetKey(context.Context, *GetKeyRequest) (*GetKeyResponse, error)
	GenerateKeys(context.Context, *GenerateKeysRequest) (*GenerateKeysResponse, error)
	ReuseKeys(context.Context, *ReuseKeysRequest) (*ReuseKeysResponse, error)
}

// UnimplementedKeyGeneratorServer can be embedded to have forward compatible implementations.
type UnimplementedKeyGeneratorServer struct {
}

func (*UnimplementedKeyGeneratorServer) HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (*UnimplementedKeyGeneratorServer) GetKey(context.Context, *GetKeyRequest) (*GetKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKey not implemented")
}
func (*UnimplementedKeyGeneratorServer) GenerateKeys(context.Context, *GenerateKeysRequest) (*GenerateKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateKeys not implemented")
}
func (*UnimplementedKeyGeneratorServer) ReuseKeys(context.Context, *ReuseKeysRequest) (*ReuseKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReuseKeys not implemented")
}

func RegisterKeyGeneratorServer(s *grpc.Server, srv KeyGeneratorServer) {
	s.RegisterService(&_KeyGenerator_serviceDesc, srv)
}

func _KeyGenerator_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyGeneratorServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nimbler_key_generator.KeyGenerator/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyGeneratorServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyGenerator_GetKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyGeneratorServer).GetKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nimbler_key_generator.KeyGenerator/GetKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyGeneratorServer).GetKey(ctx, req.(*GetKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyGenerator_GenerateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyGeneratorServer).GenerateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nimbler_key_generator.KeyGenerator/GenerateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyGeneratorServer).GenerateKeys(ctx, req.(*GenerateKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyGenerator_ReuseKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReuseKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyGeneratorServer).ReuseKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nimbler_key_generator.KeyGenerator/ReuseKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyGeneratorServer).ReuseKeys(ctx, req.(*ReuseKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KeyGenerator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nimbler_key_generator.KeyGenerator",
	HandlerType: (*KeyGeneratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _KeyGenerator_HealthCheck_Handler,
		},
		{
			MethodName: "GetKey",
			Handler:    _KeyGenerator_GetKey_Handler,
		},
		{
			MethodName: "GenerateKeys",
			Handler:    _KeyGenerator_GenerateKeys_Handler,
		},
		{
			MethodName: "ReuseKeys",
			Handler:    _KeyGenerator_ReuseKeys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nimbler_key_generator/proto/contract.proto",
}
